
variable "ami_base" {
  type    = string
  default = "${env("AMI_BASE")}"
}

variable "ami_name" {
  type    = string
  default = "app"
}

variable "ami_sha" {
  type    = string
  default = "${env("SHA")}"
}

variable "aws_access_key" {
  type    = string
  default = "${env("AWS_ACCESS_KEY")}"
}

variable "aws_secret_key" {
  type    = string
  default = "${env("AWS_SECRET_ACCESS_KEY")}"
}

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "amazon-ebs" "autogenerated_1" {
  ami_description = "${var.ami_name} AMI"
  ami_name        = "${var.ami_name} ${local.timestamp}"
  ami_regions     = ["us-east-1"]
  instance_type   = "t1.micro"
  region          = "us-east-1"
  run_tags = {
    ami-create = "${var.ami_name}"
  }
  source_ami   = "${var.ami_base}"
  ssh_username = "ubuntu"
  subnet_id    = ""
  tags = {
    AMI        = "${var.ami_name}"
    OS_Name    = "Ubuntu"
    OS_Version = "16.04"
    SHA        = "${var.ami_sha}"
  }
  vpc_id = ""
}

build {
  sources = ["source.amazon-ebs.autogenerated_1"]

  provisioner "shell" {
    inline = ["while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done"]
  }

  provisioner "shell" {
    execute_command = "chmod +x {{ .Path }}; {{ .Vars }} sudo -E {{ .Path }}"
    scripts         = ["./app/tasks/apache.sh"]
  }

  provisioner "shell" {
    execute_command = "chmod +x {{ .Path }}; {{ .Vars }} sudo -E {{ .Path }}"
    scripts         = ["./base/tasks/cleanup.sh", "./base/tasks/debug.sh"]
  }

  post-processor "manifest" {
    output     = "manifest-app.json"
    strip_path = true
  }
}
